/*1. Дан код:
var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2
d = b++; alert(d);           // 1
c = (2 + ++a); alert(c);      // 5
d = (2 + b++); alert(d);      // 4
alert(a);                    // 3
alert(b);                    // 3

//Почему код даёт именно такие результаты?

В первом действии значение инкремента стоит перед переменной, что приводит к следующей последовательности:
сначала в переменную дописывается + 1 и она становится = 2, после чего переменная а присваивается переменной с и выводится на экран.
во втором действии значение переменной b присваивается переменной d, после чего значение b изменяется на + 1, на экран выводится
значение переменной d = 1.
в третьем действии к числу прибавляется переменная, при этом перед тем как прибавиться в переменную а добавляется + 1 и а = 3(так как в предыдущем
    действии а стало равно 2).таким образом 2 + 3 = 5 и данное значение выводится на экран.
в четвертом действии число складывается со значением b(b = 2) и прописывается как значение d, после даной операции происходит инкремент переменной b
и b = 3
при выводе значений а и b получаем число 3 в каждом, так как именно к этому значению привели итерации переменных в предыдущих действиях

//2. Чему будет равен x в примере ниже?
//var a = 2;
//var x = 1 + (a *= 2);

//Ответ: 5
*/
//3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
alert('задание 3');

let a = +prompt('Введите любое целое число');
let b = +prompt('Введите любое целое число');
let c;
//если a и b положительные, вывести их разность;
if (a >= 0 && b >= 0) {
    c = a - b;
    alert('Разность чисел ' + c);
    //если а и b отрицательные, вывести их произведение;
} else if (a < 0 && b < 0) {
    c = a * b;
    alert('Произведение чисел ' + c);
    //если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом.
} else {
    c = a + b;
    alert('Сумма чисел ' + c);
}

//4. Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
alert('задание 4');
let x = +prompt('Введите число от 0 до 15');

switch (x) {
    case 0:
        console.log('0 ');
    case 1:
        console.log('1 ');
    case 2:
        console.log('2 ');
    case 3:
        console.log('3 ');
    case 4:
        console.log('4 ');
    case 5:
        console.log('5 ');
    case 6:
        console.log('6 ');
    case 7:
        console.log('7 ');
    case 8:
        console.log('8 ');
    case 9:
        console.log('9 ');
    case 10:
        console.log('10 ');
    case 11:
        console.log('11 ');
    case 12:
        console.log('12 ');
    case 13:
        console.log('13 ');
    case 14:
        console.log('14 ');
    case 15:
        console.log('15');

}


//5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.
alert('задание 5');
function sum(a, b) {
    return a + b;
}
function sub(a, b) {
    return a - b;
}
function mult(a, b) {
    return a * b;
}
function div(a, b) {
    return a / b;
}
let num1 = +prompt('Введите первое число');
let num2 = +prompt('Введите второе число');
var sub = sub(num1, num2);
var div = div(num1, num2);
alert('Сумма ' + sum(num1, num2) + '  ' + 'Разность ' + sub);
alert('Произведение ' + mult(num1, num2) + '  ' + 'Деление ' + div);
// Использовал несколько способов записи, для интереса

//6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов,
//operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций
//(использовать функции из пункта 5) и вернуть полученное значение (использовать switch).
alert('Задание 6');
function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case 'сложение':
            return sum(arg1, arg2);
            break;
        case 'вычитание':
            return sub;
            break;
        case 'умножение':
            return mult(arg1, arg2);
            break;
        case 'деление':
            return div;
            break;
    }
}
let user = prompt('Введите действие (сложение, вычитание, умножение, деление');
alert(mathOperation(a, b, user))
//7. *Сравнить null и 0. Попробуйте объяснить результат.

console.log(null > 0); //false
console.log(null >= 0);//true
console.log(null == 0);//false
//Почитал, узнал что null при сравнение преобразуется в 0, и по этому в 1 и 2 случае математически всё верно. а вот в третьем случае работает не математика
//здесь сравнивается значение именно как число, но null всё же не число и поэтому не может быть индентичен 0

//8. *С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.
//Как это работает я так и не понял. но интересно
alert('Задание 8');
let func = power(3, 2);
function power(val, pow) {
    if (pow !== 1) {
        return val * power(val, pow - 1);
    }
    return val;
}

alert(func);